{"version":3,"file":"nft-k10.js","sources":["../node_modules/near-sdk-js/lib/types/vm_types.js","../node_modules/near-sdk-js/lib/utils.js","../node_modules/@scure/base/lib/esm/index.js","../node_modules/near-sdk-js/lib/types/public_key.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/collections/lookup-map.js","../node_modules/near-sdk-js/lib/collections/vector.js","../node_modules/near-sdk-js/lib/collections/unordered-map.js","../node_modules/near-sdk-js/lib/promise.js","../src/token.ts","../src/events.ts","../src/impl.ts","../src/contract.ts"],"sourcesContent":["export var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport var PromiseError;\n(function (PromiseError) {\n    PromiseError[PromiseError[\"Failed\"] = 0] = \"Failed\";\n    PromiseError[PromiseError[\"NotReady\"] = 1] = \"NotReady\";\n})(PromiseError || (PromiseError = {}));\n","export function u8ArrayToBytes(array) {\n    let ret = \"\";\n    for (let e of array) {\n        ret += String.fromCharCode(e);\n    }\n    return ret;\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    let ret = new Uint8Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        ret[i] = bytes.charCodeAt(i);\n    }\n    return ret;\n}\nexport function bytes(strOrU8Array) {\n    if (typeof strOrU8Array == \"string\") {\n        return checkStringIsBytes(strOrU8Array);\n    }\n    else if (strOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(strOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) > 255) {\n            throw new Error(`string ${str} at index ${i}: ${str[i]} is not a valid byte`);\n        }\n    }\n    return str;\n}\nexport function assert(b, str) {\n    if (b) {\n        return;\n    }\n    else {\n        throw Error(\"assertion failed: \" + str);\n    }\n}\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","import { bytes } from \"../utils\";\nimport { base58 } from '@scure/base';\nexport var CurveType;\n(function (CurveType) {\n    CurveType[CurveType[\"ED25519\"] = 0] = \"ED25519\";\n    CurveType[CurveType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(CurveType || (CurveType = {}));\nfunction data_len(c) {\n    switch (c) {\n        case CurveType.ED25519:\n            return 32;\n        case CurveType.SECP256K1:\n            return 64;\n        default:\n            throw new UnknownCurve();\n    }\n}\nfunction split_key_type_data(value) {\n    let idx = value.indexOf(\":\");\n    if (idx >= 0) {\n        return [curveTypeFromStr(value.substring(0, idx)), value.substring(idx + 1)];\n    }\n    else {\n        return [CurveType.ED25519, value];\n    }\n}\nexport function curveTypeFromStr(value) {\n    switch (value) {\n        case \"ed25519\":\n            return CurveType.ED25519;\n        case \"secp256k1\":\n            return CurveType.SECP256K1;\n        default:\n            throw new UnknownCurve();\n    }\n}\nexport class ParsePublicKeyError extends Error {\n}\nexport class InvalidLengthError extends ParsePublicKeyError {\n    constructor(length) {\n        super(`Invalid length: ${length}`);\n        this.length = length;\n    }\n}\nexport class Base58Error extends ParsePublicKeyError {\n    constructor(error) {\n        super(`Base58 error: ${error}`);\n        this.error = error;\n    }\n}\nexport class UnknownCurve extends ParsePublicKeyError {\n    constructor() {\n        super(\"Unknown curve\");\n    }\n}\nexport class PublicKey {\n    constructor(data) {\n        this.data = data;\n        let curve_type = data.charCodeAt(0);\n        let curve_len = data_len(curve_type);\n        if (data.length != curve_len + 1) {\n            throw new InvalidLengthError(data.length);\n        }\n        this.data = data;\n    }\n    curveType() {\n        return this.data.charCodeAt(0);\n    }\n    static fromString(s) {\n        let [curve, key_data] = split_key_type_data(s);\n        let data;\n        try {\n            data = bytes(base58.decode(key_data));\n        }\n        catch (err) {\n            throw new Base58Error(err.message);\n        }\n        return new PublicKey(String.fromCharCode(curve) + data);\n    }\n}\n","import { PromiseResult } from \"./types\";\nconst U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\n// NOTE: \"env.panic(msg)\" is not exported, use \"throw Error(msg)\" instead\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseBatchActionFunctionCallWeight(promiseIndex, methodName, args, amount, gas, weight) {\n    env.promise_batch_action_function_call_weight(promiseIndex, methodName, args, amount, gas, weight);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else {\n        throw Error(`Promise result ${status == PromiseResult.Failed ? \"Failed\" :\n            status == PromiseResult.NotReady ? \"NotReady\" : status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport function initialize({}) {\n    return function (target, key, descriptor) {\n    };\n}\nexport function call({ privateFunction = false, payableFunction = false }) {\n    return function (target, key, descriptor) {\n        const originalMethod = descriptor.value;\n        descriptor.value = function (...args) {\n            if (privateFunction && near.predecessorAccountId() !== near.currentAccountId()) {\n                throw Error(\"Function is private\");\n            }\n            if (!payableFunction && near.attachedDeposit() > BigInt(0)) {\n                throw Error(\"Function is not payable\");\n            }\n            return originalMethod.apply(this, args);\n        };\n    };\n}\nexport function view({}) {\n    return function (target, key, descriptor) {\n    };\n}\nexport function NearBindgen({ requireInit = false }) {\n    return (target) => {\n        return class extends target {\n            static _create() {\n                return new target();\n            }\n            static _getState() {\n                const rawState = near.storageRead(\"STATE\");\n                return rawState ? this._deserialize(rawState) : null;\n            }\n            static _saveToStorage(obj) {\n                near.storageWrite(\"STATE\", this._serialize(obj));\n            }\n            static _getArgs() {\n                return JSON.parse(near.input() || \"{}\");\n            }\n            static _serialize(value) {\n                return JSON.stringify(value);\n            }\n            static _deserialize(value) {\n                return JSON.parse(value);\n            }\n            static _reconstruct(classObject, plainObject) {\n                for (const item in classObject) {\n                    if (classObject[item].constructor?.deserialize !== undefined) {\n                        classObject[item] = classObject[item].constructor.deserialize(plainObject[item]);\n                    }\n                    else {\n                        classObject[item] = plainObject[item];\n                    }\n                }\n                return classObject;\n            }\n            static _requireInit() {\n                return requireInit;\n            }\n        };\n    };\n}\n","import * as near from '../api';\nexport class LookupMap {\n    constructor(keyPrefix) {\n        this.keyPrefix = keyPrefix;\n    }\n    containsKey(key) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        return near.storageHasKey(storageKey);\n    }\n    get(key) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        let raw = near.storageRead(storageKey);\n        if (raw !== null) {\n            return JSON.parse(raw);\n        }\n        return null;\n    }\n    remove(key) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        if (near.storageRemove(storageKey)) {\n            return JSON.parse(near.storageGetEvicted());\n        }\n        return null;\n    }\n    set(key, value) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        let storageValue = JSON.stringify(value);\n        if (near.storageWrite(storageKey, storageValue)) {\n            return JSON.parse(near.storageGetEvicted());\n        }\n        return null;\n    }\n    extend(objects) {\n        for (let kv of objects) {\n            this.set(kv[0], kv[1]);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        return new LookupMap(data.keyPrefix);\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes } from \"../utils\";\nconst ERR_INDEX_OUT_OF_BOUNDS = \"Index out of bounds\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction indexToKey(prefix, index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    let key = u8ArrayToBytes(array);\n    return prefix + key;\n}\n/// An iterable implementation of vector that stores its content on the trie.\n/// Uses the following map: index -> element\nexport class Vector {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n    }\n    isEmpty() {\n        return this.length == 0;\n    }\n    get(index) {\n        if (index >= this.length) {\n            return null;\n        }\n        let storageKey = indexToKey(this.prefix, index);\n        return JSON.parse(near.storageRead(storageKey));\n    }\n    /// Removes an element from the vector and returns it in serialized form.\n    /// The removed element is replaced by the last element of the vector.\n    /// Does not preserve ordering, but is `O(1)`.\n    swapRemove(index) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else if (index + 1 == this.length) {\n            return this.pop();\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            let last = this.pop();\n            if (near.storageWrite(key, JSON.stringify(last))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    push(element) {\n        let key = indexToKey(this.prefix, this.length);\n        this.length += 1;\n        near.storageWrite(key, JSON.stringify(element));\n    }\n    pop() {\n        if (this.isEmpty()) {\n            return null;\n        }\n        else {\n            let lastIndex = this.length - 1;\n            let lastKey = indexToKey(this.prefix, lastIndex);\n            this.length -= 1;\n            if (near.storageRemove(lastKey)) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    replace(index, element) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            if (near.storageWrite(key, JSON.stringify(element))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.push(element);\n        }\n    }\n    [Symbol.iterator]() {\n        return new VectorIterator(this);\n    }\n    clear() {\n        for (let i = 0; i < this.length; i++) {\n            let key = indexToKey(this.prefix, i);\n            near.storageRemove(key);\n        }\n        this.length = 0;\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let vector = new Vector(data.prefix);\n        vector.length = data.length;\n        return vector;\n    }\n}\nexport class VectorIterator {\n    constructor(vector) {\n        this.current = 0;\n        this.vector = vector;\n    }\n    next() {\n        if (this.current < this.vector.length) {\n            let value = this.vector.get(this.current);\n            this.current += 1;\n            return { value, done: false };\n        }\n        return { value: null, done: true };\n    }\n}\n","import { Vector, VectorIterator } from \"./vector\";\nimport { LookupMap } from \"./lookup-map\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nexport class UnorderedMap {\n    constructor(prefix) {\n        this.prefix = prefix;\n        this.keys = new Vector(prefix + 'u'); // intentional different prefix with old UnorderedMap\n        this.values = new LookupMap(prefix + 'm');\n    }\n    get length() {\n        let keysLen = this.keys.length;\n        return keysLen;\n    }\n    isEmpty() {\n        let keysIsEmpty = this.keys.isEmpty();\n        return keysIsEmpty;\n    }\n    get(key) {\n        let valueAndIndex = this.values.get(key);\n        if (valueAndIndex === null) {\n            return null;\n        }\n        let value = valueAndIndex[0];\n        return value;\n    }\n    set(key, value) {\n        let valueAndIndex = this.values.get(key);\n        if (valueAndIndex !== null) {\n            let oldValue = valueAndIndex[0];\n            valueAndIndex[0] = value;\n            this.values.set(key, valueAndIndex);\n            return oldValue;\n        }\n        let nextIndex = this.length;\n        this.keys.push(key);\n        this.values.set(key, [value, nextIndex]);\n        return null;\n    }\n    remove(key) {\n        let oldValueAndIndex = this.values.remove(key);\n        if (oldValueAndIndex === null) {\n            return null;\n        }\n        let index = oldValueAndIndex[1];\n        if (this.keys.swapRemove(index) === null) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        // the last key is swapped to key[index], the corresponding [value, index] need update\n        if (this.keys.length > 0 && index != this.keys.length) {\n            // if there is still elements and it was not the last element\n            let swappedKey = this.keys.get(index);\n            let swappedValueAndIndex = this.values.get(swappedKey);\n            if (swappedValueAndIndex === null) {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n            this.values.set(swappedKey, [swappedValueAndIndex[0], index]);\n        }\n        return oldValueAndIndex[0];\n    }\n    clear() {\n        for (let key of this.keys) {\n            // Set instead of remove to avoid loading the value from storage.\n            this.values.set(key, null);\n        }\n        this.keys.clear();\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    [Symbol.iterator]() {\n        return new UnorderedMapIterator(this);\n    }\n    extend(kvs) {\n        for (let [k, v] of kvs) {\n            this.set(k, v);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let map = new UnorderedMap(data.prefix);\n        // reconstruct keys Vector\n        map.keys = new Vector(data.prefix + \"u\");\n        map.keys.length = data.keys.length;\n        // reconstruct values LookupMap\n        map.values = new LookupMap(data.prefix + \"m\");\n        return map;\n    }\n}\nclass UnorderedMapIterator {\n    constructor(unorderedMap) {\n        this.keys = new VectorIterator(unorderedMap.keys);\n        this.map = unorderedMap.values;\n    }\n    next() {\n        let key = this.keys.next();\n        let value;\n        if (!key.done) {\n            value = this.map.get(key.value);\n            if (value === null) {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n        return { value: [key.value, value ? value[0] : value], done: key.done };\n    }\n}\n","import * as near from \"./api\";\nexport class PromiseAction {\n}\nexport class CreateAccount extends PromiseAction {\n    add(promise_index) {\n        near.promiseBatchActionCreateAccount(promise_index);\n    }\n}\nexport class DeployContract extends PromiseAction {\n    constructor(code) {\n        super();\n        this.code = code;\n    }\n    add(promise_index) {\n        near.promiseBatchActionDeployContract(promise_index, this.code);\n    }\n}\nexport class FunctionCall extends PromiseAction {\n    constructor(function_name, args, amount, gas) {\n        super();\n        this.function_name = function_name;\n        this.args = args;\n        this.amount = amount;\n        this.gas = gas;\n    }\n    add(promise_index) {\n        near.promiseBatchActionFunctionCall(promise_index, this.function_name, this.args, this.amount, this.gas);\n    }\n}\nexport class FunctionCallWeight extends PromiseAction {\n    constructor(function_name, args, amount, gas, weight) {\n        super();\n        this.function_name = function_name;\n        this.args = args;\n        this.amount = amount;\n        this.gas = gas;\n        this.weight = weight;\n    }\n    add(promise_index) {\n        near.promiseBatchActionFunctionCallWeight(promise_index, this.function_name, this.args, this.amount, this.gas, this.weight);\n    }\n}\nexport class Transfer extends PromiseAction {\n    constructor(amount) {\n        super();\n        this.amount = amount;\n    }\n    add(promise_index) {\n        near.promiseBatchActionTransfer(promise_index, this.amount);\n    }\n}\nexport class Stake extends PromiseAction {\n    constructor(amount, public_key) {\n        super();\n        this.amount = amount;\n        this.public_key = public_key;\n    }\n    add(promise_index) {\n        near.promiseBatchActionStake(promise_index, this.amount, this.public_key.data);\n    }\n}\nexport class AddFullAccessKey extends PromiseAction {\n    constructor(public_key, nonce) {\n        super();\n        this.public_key = public_key;\n        this.nonce = nonce;\n    }\n    add(promise_index) {\n        near.promiseBatchActionAddKeyWithFullAccess(promise_index, this.public_key.data, this.nonce);\n    }\n}\nexport class AddAccessKey extends PromiseAction {\n    constructor(public_key, allowance, receiver_id, function_names, nonce) {\n        super();\n        this.public_key = public_key;\n        this.allowance = allowance;\n        this.receiver_id = receiver_id;\n        this.function_names = function_names;\n        this.nonce = nonce;\n    }\n    add(promise_index) {\n        near.promiseBatchActionAddKeyWithFunctionCall(promise_index, this.public_key.data, this.nonce, this.allowance, this.receiver_id, this.function_names);\n    }\n}\nexport class DeleteKey extends PromiseAction {\n    constructor(public_key) {\n        super();\n        this.public_key = public_key;\n    }\n    add(promise_index) {\n        near.promiseBatchActionDeleteKey(promise_index, this.public_key.data);\n    }\n}\nexport class DeleteAccount extends PromiseAction {\n    constructor(beneficiary_id) {\n        super();\n        this.beneficiary_id = beneficiary_id;\n    }\n    add(promise_index) {\n        near.promiseBatchActionDeleteAccount(promise_index, this.beneficiary_id);\n    }\n}\nclass PromiseSingle {\n    constructor(account_id, actions, after, promise_index) {\n        this.account_id = account_id;\n        this.actions = actions;\n        this.after = after;\n        this.promise_index = promise_index;\n    }\n    constructRecursively() {\n        if (this.promise_index !== null) {\n            return this.promise_index;\n        }\n        let promise_index;\n        if (this.after) {\n            promise_index = near.promiseBatchThen(this.after.constructRecursively(), this.account_id);\n        }\n        else {\n            promise_index = near.promiseBatchCreate(this.account_id);\n        }\n        for (let action of this.actions) {\n            action.add(promise_index);\n        }\n        this.promise_index = promise_index;\n        return promise_index;\n    }\n}\nexport class PromiseJoint {\n    constructor(promise_a, promise_b, promise_index) {\n        this.promise_a = promise_a;\n        this.promise_b = promise_b;\n        this.promise_index = promise_index;\n    }\n    constructRecursively() {\n        if (this.promise_index !== null) {\n            return this.promise_index;\n        }\n        let res = near.promiseAnd(BigInt(this.promise_a.constructRecursively()), BigInt(this.promise_b.constructRecursively()));\n        this.promise_index = res;\n        return res;\n    }\n}\nexport class NearPromise {\n    constructor(subtype, should_return) {\n        this.subtype = subtype;\n        this.should_return = should_return;\n    }\n    static new(account_id) {\n        let subtype = new PromiseSingle(account_id, [], null, null);\n        let ret = new NearPromise(subtype, false);\n        return ret;\n    }\n    add_action(action) {\n        if (this.subtype instanceof PromiseJoint) {\n            throw new Error(\"Cannot add action to a joint promise.\");\n        }\n        else {\n            this.subtype.actions.push(action);\n        }\n        return this;\n    }\n    createAccount() {\n        return this.add_action(new CreateAccount());\n    }\n    deployContract(code) {\n        return this.add_action(new DeployContract(code));\n    }\n    functionCall(function_name, args, amount, gas) {\n        return this.add_action(new FunctionCall(function_name, args, amount, gas));\n    }\n    functionCallWeight(function_name, args, amount, gas, weight) {\n        return this.add_action(new FunctionCallWeight(function_name, args, amount, gas, weight));\n    }\n    transfer(amount) {\n        return this.add_action(new Transfer(amount));\n    }\n    stake(amount, public_key) {\n        return this.add_action(new Stake(amount, public_key));\n    }\n    addFullAccessKey(public_key) {\n        return this.addFullAccessKeyWithNonce(public_key, 0n);\n    }\n    addFullAccessKeyWithNonce(public_key, nonce) {\n        return this.add_action(new AddFullAccessKey(public_key, nonce));\n    }\n    addAccessKey(public_key, allowance, receiver_id, method_names) {\n        return this.addAccessKeyWithNonce(public_key, allowance, receiver_id, method_names, 0n);\n    }\n    addAccessKeyWithNonce(public_key, allowance, receiver_id, method_names, nonce) {\n        return this.add_action(new AddAccessKey(public_key, allowance, receiver_id, method_names, nonce));\n    }\n    deleteKey(public_key) {\n        return this.add_action(new DeleteKey(public_key));\n    }\n    deleteAccount(beneficiary_id) {\n        return this.add_action(new DeleteAccount(beneficiary_id));\n    }\n    and(other) {\n        let subtype = new PromiseJoint(this, other, null);\n        let ret = new NearPromise(subtype, false);\n        return ret;\n    }\n    then(other) {\n        if (other.subtype instanceof PromiseSingle) {\n            if (other.subtype.after !== null) {\n                throw new Error(\"Cannot callback promise which is already scheduled after another\");\n            }\n            other.subtype.after = this;\n        }\n        else {\n            throw new Error(\"Cannot callback joint promise.\");\n        }\n        return other;\n    }\n    asReturn() {\n        this.should_return = true;\n        return this;\n    }\n    constructRecursively() {\n        let res = this.subtype.constructRecursively();\n        if (this.should_return) {\n            near.promiseReturn(res);\n        }\n        return res;\n    }\n    // Called by NearBindgen, when return object is a NearPromise instance.\n    onReturn() {\n        this.asReturn().constructRecursively();\n    }\n}\n","import { AccountId } from \"near-sdk-js/lib/types\";\n\nexport type TokenId = string;\n\nexport class Token {\n  constructor(\n    public token_id: TokenId,\n    public owner_id: AccountId,\n    public approved_account_ids?: {\n      [approved_account_id: AccountId]: bigint;\n    }\n  ) {}\n}\n","/** Standard for nep171 (Non-Fungible Token) events.\n *\n * These events will be picked up by the NEAR indexer.\n *\n * <https://github.com/near/NEPs/blob/69f76c6c78c2ebf05d856347c9c98ae48ad84ebd/specs/Standards/NonFungibleToken/Event.md>\n *\n * This is an extension of the events format (nep-297):\n * <https://github.com/near/NEPs/blob/master/specs/Standards/EventsFormat.md>\n *\n * The three events in this standard are [`NftMint`], [`NftTransfer`], and [`NftBurn`].\n *\n * These events can be logged by calling `.emit()` on them if a single event, or calling\n * [`NftMint.emit_many`], [`NftTransfer.emit_many`],\n * or [`NftBurn.emit_many`] respectively.\n */\nimport { AccountId } from \"near-sdk-js/lib/types\";\nimport { TokenId } from \"./token\";\n\nexport type Nep171EventKind = NftMint[] | NftTransfer[] | NftBurn[];\n\nexport class Nep171Event {\n  version: string;\n  event_kind: Nep171EventKind;\n\n  constructor(version: string, event_kind: Nep171EventKind) {\n    this.version = version;\n    this.event_kind = event_kind;\n  }\n}\n\n/** Data to log for an NFT mint event. To log this event, call `.emit()` */\nexport class NftMint {\n  constructor(\n    public owner_id: AccountId,\n    public token_ids: TokenId[],\n    public memo?: string\n  ) {}\n\n  /** Logs the event to the host. This is required to ensure that the event is triggered\n   * and to consume the event. */\n  emit() {\n    NftMint.emit_many([this]);\n  }\n\n  /** Emits an nft mint event, through `near.log`,\n   * where each [`NftMint`] represents the data of each mint. */\n  static emit_many(data: NftMint[]) {\n    new_171_v1(data);\n  }\n}\n\n/** Data to log for an NFT transfer event. To log this event,\n * call [`.emit()`](NftTransfer.emit). */\nexport class NftTransfer {\n  constructor(\n    public old_owner_id: AccountId,\n    public new_owner_id: AccountId,\n    public token_ids: TokenId[],\n    public authorized_id?: AccountId,\n    public memo?: string\n  ) {}\n\n  /** Logs the event to the host. This is required to ensure that the event is triggered\n   * and to consume the event. */\n  emit() {\n    NftTransfer.emit_many([this]);\n  }\n\n  /** Emits an nft transfer event, through `near.log`,\n   * where each [`NftTransfer`] represents the data of each transfer. */\n  static emit_many(data: NftTransfer[]) {\n    new_171_v1(data);\n  }\n}\n\n/** Data to log for an NFT burn event. To log this event, call [`.emit()`](NftBurn.emit). */\nexport class NftBurn {\n  constructor(\n    public owner_id: AccountId,\n    public token_ids: TokenId[],\n    public authorized_id?: string,\n    public memo?: string\n  ) {}\n\n  /** Logs the event to the host. This is required to ensure that the event is triggered\n   * and to consume the event. */\n  emit() {\n    NftBurn.emit_many([this]);\n  }\n\n  /** Emits an nft burn event, through `near.log`,\n   * where each [`NftBurn`] represents the data of each burn. */\n  static emit_many(data: NftBurn[]) {\n    new_171_v1(data);\n  }\n}\n\nfunction new_171(version: string, event_kind: Nep171EventKind) {\n  return new Nep171Event(version, event_kind);\n}\n\nfunction new_171_v1(event_kind: Nep171EventKind) {\n  return new_171(\"1.0.0\", event_kind);\n}\n","import {\n    UnorderedMap,\n    LookupMap,\n    near,\n    UnorderedSet,\n    assert,\n    NearPromise,\n    bytes\n  } from \"near-sdk-js\";\n  import { AccountId } from \"near-sdk-js/lib/types\";\n  import { Token, TokenId } from \"./token\";\n  import { NonFungibleTokenApproval } from \"./approval\";\n  import { Option, IntoStorageKey } from \"./utils\";\n  import { NftMint, NftTransfer } from \"./events\";\n\n  const GAS_FOR_RESOLVE_TRANSFER = 15000000000000n;\n  const GAS_FOR_NFT_TRANSFER_CALL = 30000000000000n + GAS_FOR_RESOLVE_TRANSFER;\n  const GAS_FOR_NFT_APPROVE = 20000000000000n;\n  \n  function expect_token_found<T>(option: Option<T>): T {\n    if (option === null) {\n      throw new Error(\"Token not found\");\n    }\n    return option;\n  }\n  \n  function expect_approval<T>(option: Option<T>): T {\n    if (option === null) {\n      throw new Error(\"next_approval_by_id must be set for approval ext\");\n    }\n    return option;\n  }\n  \n  /** Implementation of the non-fungible token standard.\n   * Allows to include NEP-171 compatible token to any contract.\n   */\n  export class NonFungibleToken\n    implements\n      NonFungibleTokenApproval\n  {\n    public owner_id: AccountId;\n    public owner_by_id: UnorderedMap;\n    public approvals_by_id: Option<LookupMap>;\n    public next_approval_id_by_id: Option<LookupMap>;\n  \n    constructor() {\n      this.owner_id = \"\";\n      this.owner_by_id = new UnorderedMap(\"\");\n      this.approvals_by_id = null;\n      this.next_approval_id_by_id = null;\n    }\n\n    nft_approve({\n      token_id,\n      account_id,\n      msg,\n    }: {\n      token_id: TokenId;\n      account_id: AccountId;\n      msg: string;\n    }): Option<NearPromise> {\n      if (this.approvals_by_id === null) {\n        throw new Error(\"NFT does not support Approval Management\");\n      }\n      const approvals_by_id = this.approvals_by_id;\n      const owner_id = expect_token_found(this.owner_by_id.get(token_id));\n  \n      assert(\n        near.predecessorAccountId() === owner_id,\n        \"Predecessor must be token owner.\"\n      );\n  \n      const next_approval_id_by_id = expect_approval(this.next_approval_id_by_id);\n      const approved_account_ids: any = approvals_by_id.get(token_id) ?? {};\n      const approval_id: any = next_approval_id_by_id.get(token_id) ?? 1;\n      const old_approved_account_ids_size = approved_account_ids.length;\n      approved_account_ids[account_id] = approval_id;\n      const new_approved_account_ids_size = approved_account_ids.length;\n  \n      approvals_by_id.set(token_id, approved_account_ids);\n  \n      next_approval_id_by_id.set(token_id, approval_id + 1);\n  \n      const storage_used =\n        new_approved_account_ids_size - old_approved_account_ids_size;\n  \n      if (msg) {\n        return NearPromise.new(account_id).functionCall(\n          \"nft_on_approve\",\n          JSON.stringify({ token_id, owner_id, approval_id, msg }),\n          0n,\n          near.prepaidGas() - GAS_FOR_NFT_APPROVE\n        );\n      }\n      return null;\n    }\n  \n    nft_revoke({\n      token_id,\n      account_id,\n    }: {\n      token_id: TokenId;\n      account_id: AccountId;\n    }) {\n      if (this.approvals_by_id === null) {\n        throw new Error(\"NFT does not support Approval Management\");\n      }\n      const approvals_by_id = this.approvals_by_id;\n      const owner_id = expect_token_found(this.owner_by_id.get(token_id));\n  \n      const predecessorAccountId = near.predecessorAccountId();\n      assert(\n        predecessorAccountId === owner_id,\n        \"Predecessor must be token owner.\"\n      );\n  \n      const approved_account_ids: any = approvals_by_id.get(token_id);\n      const old_approved_account_ids_size = approved_account_ids.length;\n      let new_approved_account_ids_size;\n  \n      if (approved_account_ids[account_id]) {\n        delete approved_account_ids[account_id];\n        if (Object.keys(approved_account_ids).length === 0) {\n          approvals_by_id.remove(token_id);\n          new_approved_account_ids_size = approved_account_ids.length;\n        } else {\n          approvals_by_id.set(token_id, approved_account_ids);\n          new_approved_account_ids_size = 0;\n        }\n      }\n    }\n  \n    nft_revoke_all({ token_id }: { token_id: TokenId }) {\n      if (this.approvals_by_id === null) {\n        throw new Error(\"NFT does not support Approval Management\");\n      }\n      const approvals_by_id = this.approvals_by_id;\n      const owner_id = expect_token_found(this.owner_by_id.get(token_id));\n  \n      const predecessorAccountId = near.predecessorAccountId();\n      assert(\n        predecessorAccountId === owner_id,\n        \"Predecessor must be token owner.\"\n      );\n  \n      const approved_account_ids = approvals_by_id.get(token_id);\n      if (approved_account_ids) {\n        approvals_by_id.remove(token_id);\n      }\n    }\n  \n    nft_is_approved({\n      token_id,\n      approved_account_id,\n      approval_id,\n    }: {\n      token_id: TokenId;\n      approved_account_id: AccountId;\n      approval_id?: bigint;\n    }): boolean {\n      expect_token_found(this.owner_by_id.get(token_id));\n  \n      if (this.approvals_by_id === null) {\n        return false;\n      }\n      const approvals_by_id = this.approvals_by_id;\n  \n      const approved_account_ids = approvals_by_id.get(token_id);\n      if (approved_account_ids === null) {\n        return false;\n      }\n  \n      const actual_approval_id = approved_account_ids[approved_account_id];\n      if (actual_approval_id === undefined) {\n        return false;\n      }\n  \n      if (approval_id) {\n        return BigInt(approval_id) === actual_approval_id;\n      }\n      return true;\n    }\n  \n    init(\n      owner_by_id_prefix: IntoStorageKey,\n      owner_id: AccountId,\n      approval_prefix?: IntoStorageKey\n    ) {\n      let approvals_by_id: Option<LookupMap>;\n      let next_approval_id_by_id: Option<LookupMap>;\n      if (approval_prefix) {\n        const prefix = approval_prefix.into_storage_key();\n        approvals_by_id = new LookupMap(prefix);\n        next_approval_id_by_id = new LookupMap(prefix + \"n\");\n      } else {\n        approvals_by_id = null;\n        next_approval_id_by_id = null;\n      }\n  \n      this.owner_id = owner_id;\n      this.owner_by_id = new UnorderedMap(\n        owner_by_id_prefix.into_storage_key()\n      );\n      this.approvals_by_id = approvals_by_id;\n      this.next_approval_id_by_id = next_approval_id_by_id;\n    }\n  \n    static reconstruct(data: NonFungibleToken): NonFungibleToken {\n      const ret = new NonFungibleToken();\n      Object.assign(ret, data);\n      return ret;\n    }\n  \n    internal_transfer_unguarded(\n      token_id: TokenId,\n      from: AccountId,\n      to: AccountId\n    ) {\n      this.owner_by_id.set(token_id, to);\n    }\n  \n    internal_transfer(\n      sender_id: AccountId,\n      receiver_id: AccountId,\n      token_id: TokenId,\n      approval_id?: bigint,\n      memo?: string\n    ): [AccountId, Option<{ [approvals: AccountId]: bigint }>] {\n      const owner_id:any = this.owner_by_id.get(token_id);\n      if (owner_id == null) {\n        throw new Error(\"Token not found\");\n      }\n  \n      const approved_account_ids: any = this.approvals_by_id?.remove(token_id);\n  \n      let sender_id_authorized: string | undefined;\n      if (sender_id != owner_id) {\n        if (!approved_account_ids) {\n          throw new Error(\"Unauthorized\");\n        }\n  \n        const actual_approval_id = approved_account_ids[sender_id];\n        if (!actual_approval_id) {\n          throw new Error(\"Sender not approved\");\n        }\n  \n        assert(\n          approval_id === undefined || approval_id == actual_approval_id,\n          `The actual approval_id ${actual_approval_id} is different from the given ${approval_id}`\n        );\n        sender_id_authorized = sender_id;\n      } else {\n        sender_id_authorized = undefined;\n      }\n      assert(owner_id != receiver_id, \"Current and next owner must differ\");\n      this.internal_transfer_unguarded(token_id, owner_id, receiver_id);\n      NonFungibleToken.emit_transfer(\n        owner_id,\n        receiver_id,\n        token_id,\n        sender_id_authorized,\n        memo\n      );\n      return [owner_id, approved_account_ids];\n    }\n  \n    static emit_transfer(\n      owner_id: AccountId,\n      receiver_id: AccountId,\n      token_id: TokenId,\n      sender_id?: AccountId,\n      memo?: string\n    ) {\n      new NftTransfer(\n        owner_id,\n        receiver_id,\n        [token_id],\n        sender_id && sender_id == owner_id ? sender_id : undefined,\n        memo\n      ).emit();\n    }\n  \n    internal_mint(\n      token_id: TokenId,\n      token_owner_id: AccountId,\n    ): Token {\n      const token = this.internal_mint_with_refund(\n        token_id,\n        token_owner_id,\n        near.predecessorAccountId()\n      );\n      new NftMint(token.owner_id, [token.token_id]).emit();\n      return token;\n    }\n  \n    internal_mint_with_refund(\n      token_id: TokenId,\n      token_owner_id: AccountId,\n      refund_id?: string\n    ): Token {\n      let initial_storage_usage: Option<[string, bigint]> = null;\n      if (this.owner_by_id.get(token_id)) {\n        throw new Error(\"token_id must be unique\");\n      }\n  \n      const owner_id = token_owner_id;\n      this.owner_by_id.set(token_id, owner_id);\n\n      const approved_account_ids = this.approvals_by_id ? {} : undefined;\n      if (initial_storage_usage) {\n        const [id, storage_usage] = initial_storage_usage;\n      }\n      return new Token(token_id, owner_id, approved_account_ids);\n    }\n  \n    nft_transfer({\n      receiver_id,\n      token_id,\n      approval_id,\n      memo,\n    }: {\n      receiver_id: AccountId;\n      token_id: TokenId;\n      approval_id?: bigint;\n      memo?: string;\n    }) {\n      const sender_id = near.predecessorAccountId();\n      this.internal_transfer(sender_id, receiver_id, token_id, approval_id, memo);\n    }\n  \n    nft_transfer_call({\n      receiver_id,\n      token_id,\n      approval_id,\n      memo,\n      msg,\n    }: {\n      receiver_id: AccountId;\n      token_id: TokenId;\n      approval_id?: bigint;\n      memo?: string;\n      msg: string;\n    }) {\n      assert(\n        near.prepaidGas() > GAS_FOR_NFT_TRANSFER_CALL,\n        \"Not enough prepaid gas\"\n      );\n      const sender_id = near.predecessorAccountId();\n      const [previous_owner_id, approved_account_ids] = this.internal_transfer(\n        sender_id,\n        receiver_id,\n        token_id,\n        approval_id,\n        memo\n      );\n  \n      const promise = NearPromise.new(receiver_id)\n        .functionCall(\n          \"nft_on_transfer\",\n          JSON.stringify({ sender_id, previous_owner_id, token_id, msg }),\n          0n,\n          near.prepaidGas() - GAS_FOR_NFT_TRANSFER_CALL\n        )\n        .then(\n          NearPromise.new(near.currentAccountId()).functionCall(\n            \"nft_resolve_transfer\",\n              JSON.stringify({\n                previous_owner_id,\n                receiver_id,\n                token_id,\n                approved_account_ids,\n              }),\n            0n,\n            GAS_FOR_RESOLVE_TRANSFER\n          )\n        );\n      return promise;\n    }\n  \n    nft_token({ token_id }: { token_id: TokenId }): Option<Token> {\n      const owner_id:any = this.owner_by_id.get(token_id);\n      if (owner_id == null) {\n        return null;\n      }\n      const approved_account_ids = this.approvals_by_id?.get(token_id) as Option<{\n        [approvals: AccountId]: bigint;\n      }>;\n      return new Token(token_id, owner_id, approved_account_ids);\n    }\n  \n    nft_resolve_transfer({\n      previous_owner_id,\n      receiver_id,\n      token_id,\n      approved_account_ids,\n    }: {\n      previous_owner_id: AccountId;\n      receiver_id: AccountId;\n      token_id: TokenId;\n      approved_account_ids?: { [approvals: AccountId]: bigint };\n    }): boolean {\n      let must_revert = false;\n      let p: string;\n      try {\n        p = near.promiseResult(0);\n      } catch (e) {\n        if (e.message.includes(\"Not Ready\")) {\n          throw new Error();\n        } else {\n          must_revert = true;\n        }\n      }\n      if (!must_revert) {\n        try {\n          const yes_or_no = JSON.parse(p);\n          if (typeof yes_or_no == \"boolean\") {\n            must_revert = yes_or_no;\n          } else {\n            must_revert = true;\n          }\n        } catch (_e) {\n          must_revert = true;\n        }\n      }\n  \n      if (!must_revert) {\n        return true;\n      }\n  \n      const current_owner = this.owner_by_id.get(token_id) as Option<AccountId>;\n      if (current_owner) {\n        if (current_owner != receiver_id) {\n          return true;\n        }\n      }\n  \n      this.internal_transfer_unguarded(token_id, receiver_id, previous_owner_id);\n  \n      if (this.approvals_by_id) {\n        const receiver_approvals = this.approvals_by_id.get(token_id);\n        if (approved_account_ids) {\n          this.approvals_by_id.set(token_id, approved_account_ids);\n        }\n      }\n      NonFungibleToken.emit_transfer(\n        receiver_id,\n        previous_owner_id,\n        token_id,\n        null,\n        null\n      );\n      return false;\n    }\n  }","import {\n  NearBindgen,\n  call,\n  view,\n  near,\n  initialize,\n  assert,\n  NearPromise,\n  PromiseOrValue\n} from \"near-sdk-js\";\nimport { AccountId } from \"near-sdk-js/lib/types\";\n\nimport { NonFungibleToken } from \"./impl\";\nimport { Option, IntoStorageKey } from \"./utils\";\nimport {\n  Token,\n  TokenId,\n} from \"./token\";\nimport { NonFungibleTokenApproval } from \"./approval/index\";\n\nclass StorageKey {}\n\nclass StorageKeyNonFungibleToken extends StorageKey implements IntoStorageKey {\n  into_storage_key(): string {\n    return \"NFT_\";\n  }\n}\n\n@NearBindgen({ requireInit: true })\nexport class NftContract \n  implements\n    NonFungibleTokenApproval\n{\n  tokens: NonFungibleToken;\n\n  constructor() {\n    this.tokens = new NonFungibleToken();\n  } \n\n  @call({ payableFunction: true })\n  nft_approve({\n    token_id,\n    account_id,\n    msg,\n  }: {\n    token_id: string;\n    account_id: string;\n    msg?: string;\n  }): Option<NearPromise> {\n    return this.tokens.nft_approve({ token_id, account_id, msg });\n  }\n\n  @call({ payableFunction: true })\n  nft_revoke({\n    token_id,\n    account_id,\n  }: {\n    token_id: string;\n    account_id: string;\n  }) {\n    return this.tokens.nft_revoke({ token_id, account_id });\n  }\n\n  @call({ payableFunction: true })\n  nft_revoke_all({ token_id }: { token_id: string }) {\n    return this.tokens.nft_revoke_all({ token_id });\n  }\n\n  @view({})\n  nft_is_approved({\n    token_id,\n    approved_account_id,\n    approval_id,\n  }: {\n    token_id: string;\n    approved_account_id: string;\n    approval_id?: bigint;\n  }): boolean {\n    return this.tokens.nft_is_approved({\n      token_id,\n      approved_account_id,\n      approval_id,\n    });\n  }\n\n  @call({ payableFunction: true })\n  nft_transfer({\n    receiver_id,\n    token_id,\n    approval_id,\n    memo,\n  }: {\n    receiver_id: string;\n    token_id: string;\n    approval_id?: bigint;\n    memo?: string;\n  }) {\n    this.tokens.nft_transfer({ receiver_id, token_id, approval_id, memo });\n  }\n\n  @call({ payableFunction: true })\n  nft_transfer_call({\n    receiver_id,\n    token_id,\n    approval_id,\n    memo,\n    msg,\n  }: {\n    receiver_id: string;\n    token_id: string;\n    approval_id?: bigint;\n    memo?: string;\n    msg: string;\n  }): PromiseOrValue<boolean> {\n    return this.tokens.nft_transfer_call({\n      receiver_id,\n      token_id,\n      approval_id,\n      memo,\n      msg,\n    });\n  }\n\n  @view({})\n  nft_token({ token_id }: { token_id: string }): Option<Token> {\n    return this.tokens.nft_token({ token_id });\n  }\n\n  @initialize({ requireInit: true })\n  init({\n    owner_id\n  }: {\n    owner_id: string;\n  }) {\n    this.tokens = new NonFungibleToken();\n    this.tokens.init(\n      new StorageKeyNonFungibleToken(),\n      owner_id\n    );\n  }\n\n  @call({ payableFunction: true })\n  nft_mint({\n    token_id,\n    token_owner_id\n  }: {\n    token_id: TokenId;\n    token_owner_id: AccountId;\n  }) {\n    assert(\n      near.predecessorAccountId() === this.tokens.owner_id,\n      \"Unauthorized\"\n    );\n    this.tokens.internal_mint(token_id, token_owner_id);\n  }\n}"],"names":["PromiseResult","PromiseError","u8ArrayToBytes","array","ret","e","String","fromCharCode","assert","b","str","Error","assertNumber","n","Number","isSafeInteger","chain","args","wrap","a","c","encode","Array","from","reverse","reduce","acc","i","undefined","decode","alphabet","digits","isArray","length","map","input","letter","index","indexOf","join","separator","to","split","padding","bits","chr","data","push","end","slice","normalize","fn","convertRadix","pos","res","forEach","d","carry","done","digit","digitBase","Math","floor","gcd","radix2carry","convertRadix2","mask","radix","num","bytes","Uint8Array","radix2","revPadding","unsafeWrapper","apply","base16","base32","s","toUpperCase","replace","base64","base64url","genBase58","abc","base58","XMR_BLOCK_LEN","base58xmr","block","subarray","padStart","blockLen","j","concat","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","words","encodingConst","len","charCodeAt","v","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","actualLength","TypeError","toLowerCase","lowered","sepIndex","lastIndexOf","sum","endsWith","decodeUnsafe","decodeToBytes","utf8","TextDecoder","TextEncoder","hex","CODERS","Object","keys","CurveType","U64_MAX","EVICTED_REGISTER","predecessorAccountId","env","predecessor_account_id","read_register","attachedDeposit","attached_deposit","prepaidGas","prepaid_gas","storageRead","key","storage_read","storageHasKey","storage_has_key","storageGetEvicted","currentAccountId","current_account_id","promiseAnd","promiseIndex","promise_and","promiseBatchCreate","accountId","promise_batch_create","promiseBatchThen","promise_batch_then","promiseBatchActionCreateAccount","promise_batch_action_create_account","promiseBatchActionDeployContract","code","promise_batch_action_deploy_contract","promiseBatchActionFunctionCall","methodName","amount","gas","promise_batch_action_function_call","promiseBatchActionTransfer","promise_batch_action_transfer","promiseBatchActionStake","publicKey","promise_batch_action_stake","promiseBatchActionAddKeyWithFullAccess","nonce","promise_batch_action_add_key_with_full_access","promiseBatchActionAddKeyWithFunctionCall","allowance","receiverId","methodNames","promise_batch_action_add_key_with_function_call","promiseBatchActionDeleteKey","promise_batch_action_delete_key","promiseBatchActionDeleteAccount","beneficiaryId","promise_batch_action_delete_account","promiseBatchActionFunctionCallWeight","weight","promise_batch_action_function_call_weight","promiseResult","resultIdx","status","promise_result","Successful","Failed","NotReady","promiseReturn","promiseIdx","promise_return","storageWrite","value","exist","storage_write","storageRemove","storage_remove","initialize","target","descriptor","call","privateFunction","payableFunction","originalMethod","near","BigInt","view","NearBindgen","requireInit","_create","_getState","rawState","_deserialize","_saveToStorage","obj","_serialize","_getArgs","JSON","parse","stringify","_reconstruct","classObject","plainObject","item","constructor","deserialize","_requireInit","LookupMap","keyPrefix","containsKey","storageKey","get","raw","remove","set","storageValue","extend","objects","kv","serialize","ERR_INDEX_OUT_OF_BOUNDS","ERR_INCONSISTENT_STATE","indexToKey","Uint32Array","buffer","Vector","isEmpty","swapRemove","pop","last","element","lastIndex","lastKey","elements","Symbol","iterator","VectorIterator","clear","toArray","vector","current","next","UnorderedMap","values","keysLen","keysIsEmpty","valueAndIndex","oldValue","nextIndex","oldValueAndIndex","swappedKey","swappedValueAndIndex","UnorderedMapIterator","kvs","k","unorderedMap","PromiseAction","CreateAccount","add","promise_index","DeployContract","FunctionCall","function_name","FunctionCallWeight","Transfer","Stake","public_key","AddFullAccessKey","AddAccessKey","receiver_id","function_names","DeleteKey","DeleteAccount","beneficiary_id","PromiseSingle","account_id","actions","after","constructRecursively","action","PromiseJoint","promise_a","promise_b","NearPromise","subtype","should_return","new","add_action","createAccount","deployContract","functionCall","functionCallWeight","transfer","stake","addFullAccessKey","addFullAccessKeyWithNonce","addAccessKey","method_names","addAccessKeyWithNonce","deleteKey","deleteAccount","and","other","then","asReturn","onReturn","Token","token_id","owner_id","approved_account_ids","NftMint","token_ids","memo","emit","emit_many","NftTransfer","old_owner_id","new_owner_id","authorized_id","GAS_FOR_RESOLVE_TRANSFER","GAS_FOR_NFT_TRANSFER_CALL","GAS_FOR_NFT_APPROVE","expect_token_found","option","expect_approval","NonFungibleToken","owner_by_id","approvals_by_id","next_approval_id_by_id","nft_approve","msg","approval_id","nft_revoke","nft_revoke_all","nft_is_approved","approved_account_id","actual_approval_id","init","owner_by_id_prefix","approval_prefix","into_storage_key","reconstruct","assign","internal_transfer_unguarded","internal_transfer","sender_id","sender_id_authorized","emit_transfer","internal_mint","token_owner_id","token","internal_mint_with_refund","refund_id","nft_transfer","nft_transfer_call","previous_owner_id","promise","nft_token","nft_resolve_transfer","must_revert","p","message","includes","yes_or_no","_e","current_owner","StorageKey","StorageKeyNonFungibleToken","NftContract","tokens","nft_mint"],"mappings":"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"}